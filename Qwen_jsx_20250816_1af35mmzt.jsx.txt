import { useState, useEffect, useRef } from "react";
import { 
  Home, Video, Users, MessageCircle, Music, 
  Image, Send, Heart, Share2, Plus, Search, 
  Settings, Lock, Shield, Gamepad2, Brain, 
  Clock, UserPlus, Eye, EyeOff, Mic, File, 
  Download, ExternalLink, Info, Star, Crown
} from "lucide-react";

const App = () => {
  const [activeTab, setActiveTab] = useState('home');
  const [darkMode, setDarkMode] = useState(true);
  const [user] = useState({
    name: "Usuario Qnnop",
    username: "@qnnop_user",
    avatar: "https://placehold.co/100/6366f1/ffffff?text=Q",
    verified: true,
    followers: "1.2M",
    following: "892"
  });
  const [posts, setPosts] = useState([
    {
      id: 1,
      user: "Ana Garc√≠a",
      username: "@anagarcia",
      avatar: "https://placehold.co/80/f59e0b/ffffff?text=A",
      content: "Explorando nuevos horizontes con Qnnop üåå #Innovaci√≥n #Tecnolog√≠a",
      image: "https://placehold.co/400x600/f59e0b/ffffff?text=Qnnop+Experience",
      likes: "24.5K",
      comments: "1.2K",
      shares: "892",
      timestamp: "2h",
      music: "Dreamscape - Ambient Vibes",
      verified: true
    },
    {
      id: 2,
      user: "Carlos Mendoza",
      username: "@carlosm",
      avatar: "https://placehold.co/80/10b981/ffffff?text=C",
      content: "Estudiando para el examen final con mi equipo en Qnnop Teams üìö",
      video: "https://placehold.co/400x600/10b981/ffffff?text=Study+Session",
      likes: "18.3K",
      comments: "945",
      shares: "678",
      timestamp: "4h",
      music: "Focus Flow - Study Beats",
      team: "Grupo de Estudio 2024"
    },
    {
      id: 3,
      user: "Sof√≠a P√©rez",
      username: "@sofiap",
      avatar: "https://placehold.co/80/ec4899/ffffff?text=S",
      content: "Mi nuevo dise√±o para el proyecto de IA üé®",
      image: "https://placehold.co/400x600/ec4899/ffffff?text=AI+Design",
      likes: "31.7K",
      comments: "2.1K",
      shares: "1.4K",
      timestamp: "6h",
      music: "Creative Pulse - Artistic Journey",
      verified: true
    }
  ]);
  const [stories, setStories] = useState([
    { id: 1, user: "T√∫", avatar: user.avatar, viewed: false, highlight: true },
    { id: 2, user: "Mar√≠a", avatar: "https://placehold.co/60/8b5cf6/ffffff?text=M", viewed: true },
    { id: 3, user: "Luis", avatar: "https://placehold.co/60/06b6d4/ffffff?text=L", viewed: false },
    { id: 4, user: "Elena", avatar: "https://placehold.co/60/f97316/ffffff?text=E", viewed: true },
    { id: 5, user: "Roberto", avatar: "https://placehold.co/60/ef4444/ffffff?text=R", viewed: false }
  ]);
  const [messages, setMessages] = useState([
    { id: 1, sender: "Ana", message: "¬°Hola! ¬øViste el nuevo update de Qnnop?", time: "10:30", unread: 2 },
    { id: 2, sender: "Equipo de Estudio", message: "Reuni√≥n a las 3pm para el proyecto", time: "09:15", unread: 1 },
    { id: 3, sender: "Qnnop AI", message: "Hola, ¬øen qu√© puedo ayudarte hoy?", time: "08:45", ai: true }
  ]);
  const [teams, setTeams] = useState([
    { id: 1, name: "Grupo de Estudio 2024", members: 12, online: 8, type: "education" },
    { id: 2, name: "Desarrolladores Qnnop", members: 25, online: 18, type: "tech" },
    { id: 3, name: "Proyecto Innovaci√≥n", members: 8, online: 5, type: "project" }
  ]);
  const [games, setGames] = useState([
    { id: 1, name: "Qnnop Arena", players: "45K", status: "online", image: "https://placehold.co/100/8b5cf6/ffffff?text=QA" },
    { id: 2, name: "Quantum Quest", players: "28K", status: "online", image: "https://placehold.co/100/06b6d4/ffffff?text=QQ" },
    { id: 3, name: "Neural Nexus", players: "12K", status: "online", image: "https://placehold.co/100/10b981/ffffff?text=NN" }
  ]);
  const [showSecurityModal, setShowSecurityModal] = useState(false);
  const [securityLevel, setSecurityLevel] = useState('high');
  const [aiChat, setAiChat] = useState([
    { id: 1, sender: 'ai', message: '¬°Hola! Soy Qwen, tu asistente de inteligencia artificial en Qnnop. ¬øEn qu√© puedo ayudarte hoy?' },
    { id: 2, sender: 'user', message: 'Hola Qwen, ¬øqu√© puedes hacer por m√≠?' }
  ]);
  const [aiInput, setAiInput] = useState('');
  const [currentReel, setCurrentReel] = useState(null);
  const [showReels, setShowReels] = useState(false);
  const messagesEndRef = useRef(null);

  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  }, [aiChat]);

  const handleAiSubmit = (e) => {
    e.preventDefault();
    if (aiInput.trim()) {
      const userMessage = { id: aiChat.length + 1, sender: 'user', message: aiInput };
      setAiChat([...aiChat, userMessage]);
      
      // Simulate AI response
      setTimeout(() => {
        const responses = [
          "Estoy analizando tu solicitud. Qnnop combina lo mejor de m√∫ltiples plataformas para ofrecerte una experiencia √∫nica.",
          "La seguridad en Qnnop es de nivel cu√°ntico, utilizando encriptaci√≥n de 512 bits y autenticaci√≥n biom√©trica avanzada.",
          "Puedo ayudarte a crear contenido, optimizar tu productividad o simplemente conversar sobre tecnolog√≠a e innovaci√≥n.",
          "Qnnop utiliza inteligencia artificial distribuida para ofrecer servicios personalizados y seguros en tiempo real."
        ];
        const aiResponse = {
          id: aiChat.length + 2,
          sender: 'ai',
          message: responses[Math.floor(Math.random() * responses.length)]
        };
        setAiChat(prev => [...prev, aiResponse]);
      }, 1000);
      
      setAiInput('');
    }
  };

  const QuickGuide = () => (
    <div className="bg-gradient-to-br from-purple-900/50 to-blue-900/50 backdrop-blur-sm rounded-xl p-6 border border-purple-500/30">
      <h3 className="text-xl font-bold text-white mb-4 flex items-center">
        <Info className="w-5 h-5 mr-2 text-yellow-400" />
        Gu√≠a R√°pida de Qnnop
      </h3>
      <div className="space-y-3 text-sm text-gray-300">
        <div className="flex items-center space-x-2">
          <Star className="w-4 h-4 text-yellow-400" />
          <span><strong>Reels:</strong> Desliza hacia arriba para ver contenido vertical</span>
        </div>
        <div className="flex items-center space-x-2">
          <Star className="w-4 h-4 text-yellow-400" />
          <span><strong>Teams:</strong> Crea equipos para estudiar o trabajar colaborativamente</span>
        </div>
        <div className="flex items-center space-x-2">
          <Star className="w-4 h-4 text-yellow-400" />
          <span><strong>Qwen AI:</strong> Habla con tu asistente de IA en cualquier momento</span>
        </div>
        <div className="flex items-center space-x-2">
          <Star className="w-4 h-4 text-yellow-400" />
          <span><strong>Seguridad:</strong> Nivel cu√°ntico con autenticaci√≥n biom√©trica</span>
        </div>
      </div>
    </div>
  );

  const SecurityModal = () => (
    <div className="fixed inset-0 bg-black/80 backdrop-blur-sm flex items-center justify-center z-50 p-4">
      <div className="bg-gradient-to-br from-gray-900 to-black rounded-2xl p-8 max-w-md w-full border border-green-500/50">
        <div className="text-center mb-6">
          <Shield className="w-16 h-16 text-green-400 mx-auto mb-4" />
          <h3 className="text-2xl font-bold text-white mb-2">Centro de Seguridad Qnnop</h3>
          <p className="text-gray-400">Protecci√≥n de nivel cu√°ntico activada</p>
        </div>
        
        <div className="space-y-4 mb-6">
          <div className="flex items-center justify-between p-3 bg-green-500/20 rounded-lg border border-green-500/30">
            <span className="text-green-400">Encriptaci√≥n 512-bit</span>
            <div className="w-2 h-2 bg-green-400 rounded-full"></div>
          </div>
          <div className="flex items-center justify-between p-3 bg-green-500/20 rounded-lg border border-green-500/30">
            <span className="text-green-400">Autenticaci√≥n Biom√©trica</span>
            <div className="w-2 h-2 bg-green-400 rounded-full"></div>
          </div>
          <div className="flex items-center justify-between p-3 bg-green-500/20 rounded-lg border border-green-500/30">
            <span className="text-green-400">Protecci√≥n Anti-Hack</span>
            <div className="w-2 h-2 bg-green-400 rounded-full"></div>
          </div>
        </div>
        
        <div className="flex space-x-3">
          <button 
            onClick={() => setShowSecurityModal(false)}
            className="flex-1 bg-gradient-to-r from-purple-600 to-blue-600 text-white py-3 rounded-lg font-semibold hover:from-purple-700 hover:to-blue-700 transition-all"
          >
            Entendido
          </button>
        </div>
      </div>
    </div>
  );

  const ReelsViewer = () => (
    <div className="fixed inset-0 bg-black z-40 flex items-center justify-center">
      <div className="relative w-full h-full">
        <button 
          onClick={() => setShowReels(false)}
          className="absolute top-4 right-4 z-50 bg-black/50 text-white p-2 rounded-full hover:bg-black/70 transition-colors"
        >
          <ExternalLink className="w-6 h-6 rotate-45" />
        </button>
        
        <div className="w-full h-full flex items-center justify-center">
          <div className="w-80 h-[70vh] bg-gradient-to-br from-purple-900 to-blue-900 rounded-2xl p-4 flex flex-col items-center justify-center relative overflow-hidden">
            <div className="absolute inset-0 bg-black/20"></div>
            <div className="relative z-10 text-center">
              <div className="w-16 h-16 bg-gradient-to-r from-pink-500 to-purple-500 rounded-full mx-auto mb-4 flex items-center justify-center">
                <Video className="w-8 h-8 text-white" />
              </div>
              <h3 className="text-2xl font-bold text-white mb-2">Qnnop Reels</h3>
              <p className="text-gray-300">Experimenta el futuro del contenido vertical</p>
              <p className="text-sm text-gray-400 mt-2">Optimizado con IA y conectividad universal</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  return (
    <div className={`min-h-screen ${darkMode ? 'bg-gray-900 text-white' : 'bg-gray-50 text-gray-900'} transition-colors duration-300`}>
      {/* Security Modal */}
      {showSecurityModal && <SecurityModal />}
      
      {/* Reels Viewer */}
      {showReels && <ReelsViewer />}
      
      {/* Header */}
      <header className="bg-gradient-to-r from-purple-900 via-blue-900 to-indigo-900 border-b border-purple-500/30 backdrop-blur-sm sticky top-0 z-30">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-16">
            {/* Logo */}
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-gradient-to-br from-purple-500 to-pink-500 rounded-xl flex items-center justify-center shadow-lg">
                <span className="text-white font-bold text-lg">Q</span>
              </div>
              <div>
                <h1 className="text-xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">
                  Qnnop
                </h1>
                <p className="text-xs text-purple-200">El futuro de la conectividad</p>
              </div>
            </div>
            
            {/* Search */}
            <div className="hidden md:flex flex-1 max-w-md mx-8">
              <div className="relative w-full">
                <input
                  type="text"
                  placeholder="Buscar en Qnnop..."
                  className="w-full bg-white/10 backdrop-blur-sm border border-purple-500/30 rounded-full py-2 pl-10 pr-4 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                />
                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400" />
              </div>
            </div>
            
            {/* User Actions */}
            <div className="flex items-center space-x-4">
              <button 
                onClick={() => setShowSecurityModal(true)}
                className="p-2 text-gray-300 hover:text-white hover:bg-white/10 rounded-lg transition-all"
                title="Centro de Seguridad"
              >
                <Shield className="w-5 h-5" />
              </button>
              <button 
                onClick={() => setShowReels(true)}
                className="p-2 text-gray-300 hover:text-white hover:bg-white/10 rounded-lg transition-all"
                title="Qnnop Reels"
              >
                <Video className="w-5 h-5" />
              </button>
              <div className="w-8 h-8 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center">
                <span className="text-white text-sm font-semibold">U</span>
              </div>
            </div>
          </div>
        </div>
      </header>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
        <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
          {/* Left Sidebar - Navigation */}
          <div className="lg:col-span-1">
            <nav className="bg-gradient-to-b from-gray-800/50 to-gray-900/50 backdrop-blur-sm rounded-2xl p-4 border border-gray-700/50 sticky top-24">
              <div className="space-y-2">
                {[
                  { icon: Home, label: 'Inicio', tab: 'home' },
                  { icon: Users, label: 'Teams', tab: 'teams' },
                  { icon: MessageCircle, label: 'Mensajes', tab: 'messages' },
                  { icon: Gamepad2, label: 'Juegos', tab: 'games' },
                  { icon: Brain, label: 'Qwen AI', tab: 'ai' },
                  { icon: Settings, label: 'Configuraci√≥n', tab: 'settings' }
                ].map((item) => (
                  <button
                    key={item.tab}
                    onClick={() => setActiveTab(item.tab)}
                    className={`w-full flex items-center space-x-3 px-4 py-3 rounded-xl transition-all ${
                      activeTab === item.tab
                        ? 'bg-gradient-to-r from-purple-600 to-blue-600 text-white shadow-lg'
                        : 'text-gray-300 hover:text-white hover:bg-white/10'
                    }`}
                  >
                    <item.icon className="w-5 h-5" />
                    <span className="font-medium">{item.label}</span>
                  </button>
                ))}
              </div>
              
              <div className="mt-6 pt-6 border-t border-gray-700/50">
                <QuickGuide />
              </div>
            </nav>
          </div>

          {/* Main Content */}
          <div className="lg:col-span-2">
            {activeTab === 'home' && (
              <div className="space-y-6">
                {/* Stories */}
                <div className="bg-gradient-to-r from-purple-900/30 to-blue-900/30 backdrop-blur-sm rounded-2xl p-6 border border-purple-500/20">
                  <h2 className="text-xl font-bold text-white mb-4">Historias</h2>
                  <div className="flex space-x-4 overflow-x-auto pb-2">
                    {stories.map((story) => (
                      <div key={story.id} className="flex flex-col items-center space-y-2 flex-shrink-0">
                        <div className={`w-16 h-16 rounded-full p-0.5 ${
                          story.viewed ? 'bg-gray-600' : 'bg-gradient-to-r from-purple-500 to-pink-500'
                        }`}>
                          <img 
                            src={story.avatar} 
                            alt={story.user}
                            className="w-full h-full rounded-full border-2 border-gray-900"
                          />
                        </div>
                        <span className="text-xs text-gray-300 text-center w-16 truncate">
                          {story.user}
                        </span>
                      </div>
                    ))}
                  </div>
                </div>

                {/* Posts */}
                {posts.map((post) => (
                  <div key={post.id} className="bg-gradient-to-br from-gray-800/50 to-gray-900/50 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/50">
                    {/* Post Header */}
                    <div className="flex items-center justify-between mb-4">
                      <div className="flex items-center space-x-3">
                        <img 
                          src={post.avatar} 
                          alt={post.user}
                          className="w-10 h-10 rounded-full"
                        />
                        <div>
                          <div className="flex items-center space-x-1">
                            <h3 className="font-semibold text-white">{post.user}</h3>
                            {post.verified && <Crown className="w-4 h-4 text-yellow-400" />}
                          </div>
                          <p className="text-sm text-gray-400">{post.username} ‚Ä¢ {post.timestamp}</p>
                        </div>
                      </div>
                      {post.team && (
                        <span className="text-xs bg-blue-500/20 text-blue-400 px-2 py-1 rounded-full">
                          {post.team}
                        </span>
                      )}
                    </div>

                    {/* Post Content */}
                    <p className="text-gray-200 mb-4">{post.content}</p>
                    
                    {post.image && (
                      <img 
                        src={post.image} 
                        alt="Post content"
                        className="w-full rounded-xl mb-4"
                      />
                    )}
                    
                    {post.video && (
                      <div className="w-full bg-gradient-to-br from-purple-900/50 to-blue-900/50 rounded-xl p-8 mb-4 flex items-center justify-center">
                        <div className="text-center">
                          <Video className="w-12 h-12 text-white mx-auto mb-2" />
                          <p className="text-white">Video de estudio</p>
                        </div>
                      </div>
                    )}

                    {/* Music */}
                    {post.music && (
                      <div className="flex items-center space-x-2 text-sm text-purple-400 mb-4">
                        <Music className="w-4 h-4" />
                        <span>{post.music}</span>
                      </div>
                    )}

                    {/* Actions */}
                    <div className="flex items-center justify-between pt-4 border-t border-gray-700/50">
                      <div className="flex items-center space-x-6">
                        <button className="flex items-center space-x-2 text-gray-400 hover:text-red-500 transition-colors">
                          <Heart className="w-5 h-5" />
                          <span>{post.likes}</span>
                        </button>
                        <button className="flex items-center space-x-2 text-gray-400 hover:text-blue-500 transition-colors">
                          <MessageCircle className="w-5 h-5" />
                          <span>{post.comments}</span>
                        </button>
                        <button className="flex items-center space-x-2 text-gray-400 hover:text-green-500 transition-colors">
                          <Share2 className="w-5 h-5" />
                          <span>{post.shares}</span>
                        </button>
                      </div>
                      
                      <button className="flex items-center space-x-2 text-gray-400 hover:text-purple-400 transition-colors">
                        <Send className="w-5 h-5" />
                        <span>Enviar</span>
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            )}

            {activeTab === 'teams' && (
              <div className="space-y-6">
                <div className="flex items-center justify-between">
                  <h2 className="text-2xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">
                    Qnnop Teams
                  </h2>
                  <button className="bg-gradient-to-r from-purple-600 to-blue-600 text-white px-4 py-2 rounded-xl font-semibold hover:from-purple-700 hover:to-blue-700 transition-all flex items-center space-x-2">
                    <UserPlus className="w-4 h-4" />
                    <span>Crear Equipo</span>
                  </button>
                </div>
                
                <div className="grid gap-4">
                  {teams.map((team) => (
                    <div key={team.id} className="bg-gradient-to-r from-gray-800/50 to-gray-900/50 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/50">
                      <div className="flex items-center justify-between">
                        <div>
                          <h3 className="text-xl font-bold text-white">{team.name}</h3>
                          <p className="text-gray-400">{team.members} miembros ‚Ä¢ {team.online} en l√≠nea</p>
                        </div>
                        <div className="flex items-center space-x-4">
                          <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                            team.type === 'education' ? 'bg-blue-500/20 text-blue-400' :
                            team.type === 'tech' ? 'bg-green-500/20 text-green-400' :
                            'bg-purple-500/20 text-purple-400'
                          }`}>
                            {team.type === 'education' ? 'Educaci√≥n' : 
                             team.type === 'tech' ? 'Tecnolog√≠a' : 'Proyecto'}
                          </span>
                          <button className="bg-gradient-to-r from-purple-600 to-blue-600 text-white px-4 py-2 rounded-xl font-semibold hover:from-purple-700 hover:to-blue-700 transition-all">
                            Unirse
                          </button>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {activeTab === 'messages' && (
              <div className="space-y-6">
                <h2 className="text-2xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">
                  Mensajes
                </h2>
                
                <div className="bg-gradient-to-br from-gray-800/50 to-gray-900/50 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/50">
                  <div className="space-y-4">
                    {messages.map((msg) => (
                      <div key={msg.id} className="flex items-center justify-between p-4 bg-white/5 rounded-xl hover:bg-white/10 transition-all">
                        <div className="flex items-center space-x-3">
                          <div className="w-10 h-10 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center">
                            <span className="text-white font-semibold text-sm">
                              {msg.sender.split(' ').map(n => n[0]).join('')}
                            </span>
                          </div>
                          <div>
                            <h4 className="font-semibold text-white">{msg.sender}</h4>
                            <p className="text-sm text-gray-400">{msg.message}</p>
                          </div>
                        </div>
                        <div className="text-right">
                          <p className="text-sm text-gray-400 mb-1">{msg.time}</p>
                          {msg.unread && (
                            <span className="bg-red-500 text-white text-xs px-2 py-1 rounded-full">
                              {msg.unread}
                            </span>
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            )}

            {activeTab === 'games' && (
              <div className="space-y-6">
                <div className="flex items-center justify-between">
                  <h2 className="text-2xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">
                    Centro de Juegos Qnnop
                  </h2>
                  <button className="bg-gradient-to-r from-purple-600 to-blue-600 text-white px-4 py-2 rounded-xl font-semibold hover:from-purple-700 hover:to-blue-700 transition-all">
                    Explorar Juegos
                  </button>
                </div>
                
                <div className="grid gap-4">
                  {games.map((game) => (
                    <div key={game.id} className="bg-gradient-to-r from-gray-800/50 to-gray-900/50 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/50 flex items-center justify-between">
                      <div className="flex items-center space-x-4">
                        <img 
                          src={game.image} 
                          alt={game.name}
                          className="w-16 h-16 rounded-xl"
                        />
                        <div>
                          <h3 className="text-xl font-bold text-white">{game.name}</h3>
                          <p className="text-gray-400">{game.players} jugadores activos</p>
                        </div>
                      </div>
                      <div className="flex items-center space-x-4">
                        <span className="flex items-center space-x-1 text-green-400">
                          <div className="w-2 h-2 bg-green-400 rounded-full"></div>
                          <span className="text-sm">En l√≠nea</span>
                        </span>
                        <button className="bg-gradient-to-r from-green-600 to-blue-600 text-white px-6 py-2 rounded-xl font-semibold hover:from-green-700 hover:to-blue-700 transition-all">
                          Jugar
                        </button>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}

            {activeTab === 'ai' && (
              <div className="space-y-6">
                <div className="flex items-center justify-between">
                  <div>
                    <h2 className="text-2xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">
                      Qwen AI
                    </h2>
                    <p className="text-gray-400">Tu asistente de inteligencia artificial</p>
                  </div>
                  <div className="flex items-center space-x-2 text-green-400">
                    <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
                    <span className="text-sm">Conectado</span>
                  </div>
                </div>
                
                <div className="bg-gradient-to-br from-gray-800/50 to-gray-900/50 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/50 h-96 flex flex-col">
                  <div className="flex-1 overflow-y-auto space-y-4 mb-4" ref={messagesEndRef}>
                    {aiChat.map((msg) => (
                      <div key={msg.id} className={`flex ${msg.sender === 'user' ? 'justify-end' : 'justify-start'}`}>
                        <div className={`max-w-xs lg:max-w-md px-4 py-2 rounded-2xl ${
                          msg.sender === 'user' 
                            ? 'bg-gradient-to-r from-purple-600 to-blue-600 text-white' 
                            : 'bg-white/10 text-gray-200'
                        }`}>
                          {msg.message}
                        </div>
                      </div>
                    ))}
                  </div>
                  
                  <form onSubmit={handleAiSubmit} className="flex space-x-2">
                    <input
                      type="text"
                      value={aiInput}
                      onChange={(e) => setAiInput(e.target.value)}
                      placeholder="Pregunta a Qwen..."
                      className="flex-1 bg-white/10 backdrop-blur-sm border border-purple-500/30 rounded-xl py-2 px-4 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-purple-500"
                    />
                    <button
                      type="submit"
                      className="bg-gradient-to-r from-purple-600 to-blue-600 text-white p-2 rounded-xl hover:from-purple-700 hover:to-blue-700 transition-all"
                    >
                      <Send className="w-5 h-5" />
                    </button>
                  </form>
                </div>
              </div>
            )}

            {activeTab === 'settings' && (
              <div className="space-y-6">
                <h2 className="text-2xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">
                  Configuraci√≥n
                </h2>
                
                <div className="grid gap-6">
                  <div className="bg-gradient-to-br from-gray-800/50 to-gray-900/50 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/50">
                    <h3 className="text-lg font-semibold text-white mb-4">Modo de Apariencia</h3>
                    <div className="flex items-center space-x-4">
                      <button
                        onClick={() => setDarkMode(true)}
                        className={`flex-1 p-3 rounded-xl border transition-all ${
                          darkMode 
                            ? 'bg-purple-600/20 border-purple-500 text-white' 
                            : 'border-gray-600 text-gray-400'
                        }`}
                      >
                        Oscuro
                      </button>
                      <button
                        onClick={() => setDarkMode(false)}
                        className={`flex-1 p-3 rounded-xl border transition-all ${
                          !darkMode 
                            ? 'bg-purple-600/20 border-purple-500 text-white' 
                            : 'border-gray-600 text-gray-400'
                        }`}
                      >
                        Claro
                      </button>
                    </div>
                  </div>
                  
                  <div className="bg-gradient-to-br from-gray-800/50 to-gray-900/50 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/50">
                    <h3 className="text-lg font-semibold text-white mb-4">Seguridad</h3>
                    <div className="space-y-3">
                      <div className="flex items-center justify-between">
                        <span className="text-gray-300">Autenticaci√≥n de dos factores</span>
                        <button className="bg-green-500/20 text-green-400 px-3 py-1 rounded-lg text-sm">
                          Activado
                        </button>
                      </div>
                      <div className="flex items-center justify-between">
                        <span className="text-gray-300">Encriptaci√≥n de extremo a extremo</span>
                        <button className="bg-green-500/20 text-green-400 px-3 py-1 rounded-lg text-sm">
                          Activado
                        </button>
                      </div>
                      <div className="flex items-center justify-between">
                        <span className="text-gray-300">Protecci√≥n anti-phishing</span>
                        <button className="bg-green-500/20 text-green-400 px-3 py-1 rounded-lg text-sm">
                          Activado
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            )}
          </div>

          {/* Right Sidebar */}
          <div className="lg:col-span-1">
            <div className="space-y-6">
              {/* User Profile */}
              <div className="bg-gradient-to-br from-purple-900/30 to-blue-900/30 backdrop-blur-sm rounded-2xl p-6 border border-purple-500/20">
                <div className="text-center">
                  <img 
                    src={user.avatar} 
                    alt={user.name}
                    className="w-20 h-20 rounded-full mx-auto mb-4 border-4 border-purple-500/30"
                  />
                  <h3 className="text-lg font-bold text-white">{user.name}</h3>
                  <p className="text-purple-400">{user.username}</p>
                  {user.verified && (
                    <div className="flex items-center justify-center space-x-1 mt-2">
                      <Crown className="w-4 h-4 text-yellow-400" />
                      <span className="text-xs text-yellow-400">Verificado</span>
                    </div>
                  )}
                  
                  <div className="grid grid-cols-2 gap-4 mt-6 pt-6 border-t border-purple-500/20">
                    <div>
                      <p className="text-2xl font-bold text-white">{user.followers}</p>
                      <p className="text-sm text-gray-400">Seguidores</p>
                    </div>
                    <div>
                      <p className="text-2xl font-bold text-white">{user.following}</p>
                      <p className="text-sm text-gray-400">Siguiendo</p>
                    </div>
                  </div>
                </div>
              </div>

              {/* Quick Actions */}
              <div className="bg-gradient-to-b from-gray-800/50 to-gray-900/50 backdrop-blur-sm rounded-2xl p-6 border border-gray-700/50">
                <h3 className="text-lg font-semibold text-white mb-4">Acciones R√°pidas</h3>
                <div className="space-y-3">
                  <button className="w-full flex items-center space-x-3 p-3 bg-gradient-to-r from-purple-600/20 to-blue-600/20 rounded-xl hover:from-purple-600/30 hover:to-blue-600/30 transition-all border border-purple-500/20">
                    <Plus className="w-5 h-5 text-purple-400" />
                    <span className="text-white">Nuevo Post</span>
                  </button>
                  <button className="w-full flex items-center space-x-3 p-3 bg-gradient-to-r from-green-600/20 to-blue-600/20 rounded-xl hover:from-green-600/30 hover:to-blue-600/30 transition-all border border-green-500/20">
                    <Video className="w-5 h-5 text-green-400" />
                    <span className="text-white">Nuevo Reel</span>
                  </button>
                  <button className="w-full flex items-center space-x-3 p-3 bg-gradient-to-r from-blue-600/20 to-purple-600/20 rounded-xl hover:from-blue-600/30 hover:to-purple-600/30 transition-all border border-blue-500/20">
                    <Music className="w-5 h-5 text-blue-400" />
                    <span className="text-white">Estado con M√∫sica</span>
                  </button>
                </div>
              </div>

              {/* Security Status */}
              <div className="bg-gradient-to-br from-green-900/30 to-emerald-900/30 backdrop-blur-sm rounded-2xl p-6 border border-green-500/30">
                <div className="flex items-center space-x-3 mb-4">
                  <Shield className="w-6 h-6 text-green-400" />
                  <h3 className="text-lg font-semibold text-white">Seguridad Qnnop</h3>
                </div>
                <div className="space-y-2 text-sm">
                  <div className="flex items-center justify-between">
                    <span className="text-gray-300">Nivel</span>
                    <span className="text-green-400 font-semibold">Cu√°ntico</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-gray-300">Encriptaci√≥n</span>
                    <span className="text-green-400">512-bit</span>
                  </div>
                  <div className="flex items-center justify-between">
                    <span className="text-gray-300">Estado</span>
                    <div className="flex items-center space-x-1">
                      <div className="w-2 h-2 bg-green-400 rounded-full"></div>
                      <span className="text-green-400">Activo</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Floating Action Button */}
      <button className="fixed bottom-6 right-6 w-14 h-14 bg-gradient-to-r from-purple-600 to-blue-600 rounded-full shadow-2xl hover:shadow-purple-500/25 flex items-center justify-center text-white text-xl font-bold z-20 hover:scale-110 transition-all">
        +
      </button>
    </div>
  );
};

export default App;